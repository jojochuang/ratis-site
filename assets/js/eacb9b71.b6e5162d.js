"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[7655],{5404:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>o});var a=r(6672);const n={},i=a.createContext(n);function s(e){const t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(i.Provider,{value:t},e.children)}},5499:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"developer-guide/streaming-configuration","title":"Streaming Configuration","description":"This tutorial explains how to configure the Ratis streaming feature.","source":"@site/docs/developer-guide/streaming-configuration.md","sourceDirName":"developer-guide","slug":"/developer-guide/streaming-configuration","permalink":"/ratis-site/docs/developer-guide/streaming-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/ratis-site/edit/main/docs/developer-guide/streaming-configuration.md","tags":[],"version":"current","frontMatter":{"title":"Streaming Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"No-Leader Mode","permalink":"/ratis-site/docs/features/no-leader-mode"},"next":{"title":"Advanced StateMachine APIs","permalink":"/ratis-site/docs/developer-guide/statemachine-developer-guide"}}');var n=r(3420),i=r(5404);const s={title:"Streaming Configuration"},o="Ratis Streaming Configuration",d={},l=[{value:"Enabling DataStream",id:"enabling-datastream",level:2},{value:"Server-Side Configuration",id:"server-side-configuration",level:2},{value:"Port",id:"port",level:3},{value:"Thread Pool",id:"thread-pool",level:3},{value:"Client-Side Configuration",id:"client-side-configuration",level:2},{value:"Primary DataStream Server",id:"primary-datastream-server",level:3},{value:"Request Timeout",id:"request-timeout",level:3},{value:"Flush and Outstanding Requests",id:"flush-and-outstanding-requests",level:3},{value:"TLS/SSL",id:"tlsssl",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"ratis-streaming-configuration",children:"Ratis Streaming Configuration"})}),"\n",(0,n.jsx)(t.p,{children:"This tutorial explains how to configure the Ratis streaming feature."}),"\n",(0,n.jsx)(t.h2,{id:"enabling-datastream",children:"Enabling DataStream"}),"\n",(0,n.jsxs)(t.p,{children:["The first step is to enable the DataStream feature by setting the ",(0,n.jsx)(t.code,{children:"raft.datastream.type"})," property. The supported values are ",(0,n.jsx)(t.code,{children:"NETTY"})," and ",(0,n.jsx)(t.code,{children:"DISABLED"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"import org.apache.ratis.RaftConfigKeys;\nimport org.apache.ratis.datastream.SupportedDataStreamType;\nimport org.apache.ratis.conf.RaftProperties;\n\nRaftProperties properties = new RaftProperties();\nRaftConfigKeys.DataStream.setType(properties, SupportedDataStreamType.NETTY);\n"})}),"\n",(0,n.jsx)(t.h2,{id:"server-side-configuration",children:"Server-Side Configuration"}),"\n",(0,n.jsx)(t.p,{children:"On the server side, you need to configure the DataStream port and thread pool sizes."}),"\n",(0,n.jsx)(t.h3,{id:"port",children:"Port"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"raft.netty.dataStream.port"})," property specifies the port that the DataStream server will listen on."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"import org.apache.ratis.netty.NettyConfigKeys;\n\nNettyConfigKeys.DataStream.setPort(properties, 5000); // Set your desired port\n"})}),"\n",(0,n.jsx)(t.h3,{id:"thread-pool",children:"Thread Pool"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"raft.server.data-stream.async.request.thread.pool.size"})," and ",(0,n.jsx)(t.code,{children:"raft.server.data-stream.async.write.thread.pool.size"})," properties control the size of the thread pools used for handling async requests and writes."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"import org.apache.ratis.server.RaftServerConfigKeys;\n\nRaftServerConfigKeys.DataStream.setAsyncRequestThreadPoolSize(properties, 32);\nRaftServerConfigKeys.DataStream.setAsyncWriteThreadPoolSize(properties, 16);\n"})}),"\n",(0,n.jsx)(t.h2,{id:"client-side-configuration",children:"Client-Side Configuration"}),"\n",(0,n.jsx)(t.p,{children:"On the client side, you need to configure the DataStream server address and other parameters."}),"\n",(0,n.jsx)(t.h3,{id:"primary-datastream-server",children:"Primary DataStream Server"}),"\n",(0,n.jsxs)(t.p,{children:["You need to specify the primary DataStream server when building the ",(0,n.jsx)(t.code,{children:"RaftClient"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"import org.apache.ratis.client.RaftClient;\nimport org.apache.ratis.protocol.RaftPeer;\n\nRaftClient client = RaftClient.newBuilder()\n    .setPrimaryDataStreamServer(primaryDataStreamServer)\n    // ... other builder methods\n    .build();\n"})}),"\n",(0,n.jsx)(t.h3,{id:"request-timeout",children:"Request Timeout"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"raft.client.data-stream.request.timeout"})," property sets the timeout for DataStream requests."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'import org.apache.ratis.client.RaftClientConfigKeys;\nimport org.apache.ratis.util.TimeDuration;\n\nRaftClientConfigKeys.DataStream.setRequestTimeout(properties, TimeDuration.valueOf(10, "s"));\n'})}),"\n",(0,n.jsx)(t.h3,{id:"flush-and-outstanding-requests",children:"Flush and Outstanding Requests"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"raft.client.data-stream.flush.request.count.min"}),", ",(0,n.jsx)(t.code,{children:"raft.client.data-stream.flush.request.bytes.min"}),", and ",(0,n.jsx)(t.code,{children:"raft.client.data-stream.outstanding-requests.max"})," properties control the flushing behavior and the maximum number of outstanding requests."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'import org.apache.ratis.client.RaftClientConfigKeys;\nimport org.apache.ratis.util.SizeInBytes;\n\nRaftClientConfigKeys.DataStream.setFlushRequestCountMin(properties, 10);\nRaftClientConfigKeys.DataStream.setFlushRequestBytesMin(properties, SizeInBytes.valueOf("1MB"));\nRaftClientConfigKeys.DataStream.setOutstandingRequestsMax(properties, 100);\n'})}),"\n",(0,n.jsx)(t.h2,{id:"tlsssl",children:"TLS/SSL"}),"\n",(0,n.jsxs)(t.p,{children:["For secure communication, you can configure TLS for the DataStream server and client using the ",(0,n.jsx)(t.code,{children:"raft.netty.dataStream.server.tls.conf"})," and ",(0,n.jsx)(t.code,{children:"raft.netty.dataStream.client.tls.conf"})," properties."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);