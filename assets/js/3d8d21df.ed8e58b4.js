"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[2495],{959:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"about","title":"About Apache Ratis","description":"Apache Ratis is a highly customizable Raft protocol implementation in Java. Raft is an easily understandable consensus algorithm to manage replicated state. The Ratis project was started at 2016, entered Apache incubation in 2017, and graduated as a top level Apache project on Feb 17, 2021. Originally, Ratis was built for using Raft in Apache Ozone in order to replicate raw data and to provide high availability. The correctness and the performance of Ratis have been heavily tested with Ozone.","source":"@site/docs/about.md","sourceDirName":".","slug":"/about","permalink":"/ratis-site/docs/about","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/ratis-site/edit/main/docs/about.md","tags":[],"version":"current","frontMatter":{"title":"About Apache Ratis"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/ratis-site/docs/overview"},"next":{"title":"Getting Started (Detailed)","permalink":"/ratis-site/docs/getting-started-detailed"}}');var n=a(3420),s=a(5404);const l={title:"About Apache Ratis"},o="Apache Ratis",r={},c=[{value:"Pluggability",id:"pluggability",level:2},{value:"Pluggable transport",id:"pluggable-transport",level:3},{value:"Pluggable state machine",id:"pluggable-state-machine",level:3},{value:"Pluggable raft log",id:"pluggable-raft-log",level:3}];function p(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"apache-ratis",children:"Apache Ratis"})}),"\n",(0,n.jsxs)(t.p,{children:["Apache Ratis is a highly customizable Raft protocol implementation in Java. ",(0,n.jsx)(t.a,{href:"https://raft.github.io/",children:"Raft"})," is an easily understandable consensus algorithm to manage replicated state. The Ratis project was started at 2016, entered Apache incubation in 2017, and graduated as a top level Apache project on Feb 17, 2021. Originally, Ratis was built for using Raft in ",(0,n.jsx)(t.a,{href:"https://ozone.apache.org",children:"Apache Ozone"})," in order to replicate raw data and to provide high availability. The correctness and the performance of Ratis have been heavily tested with Ozone."]}),"\n",(0,n.jsx)(t.h2,{id:"pluggability",children:"Pluggability"}),"\n",(0,n.jsx)(t.p,{children:"Unlike many other raft implementations, Ratis is designed to be pluggable, it could be used in any Java applications where state should be replicated between multiple instances. Ratis provides abstractions over Raft protocol for users, which make Raft library fully decoupled from the applications."}),"\n",(0,n.jsx)(t.h3,{id:"pluggable-transport",children:"Pluggable transport"}),"\n",(0,n.jsx)(t.p,{children:"Ratis provides a pluggable transport layer. Applications may use their own implementation. By default, gRPC, Netty+Protobuf and Apache Hadoop RPC based transports are provided."}),"\n",(0,n.jsx)(t.h3,{id:"pluggable-state-machine",children:"Pluggable state machine"}),"\n",(0,n.jsx)(t.p,{children:"Ratis supports a log and state machine. State machine typically contains the data that you want to make highly available. Applications usually define its own state machine for the application logic. Ratis makes it easy to use your own state machine."}),"\n",(0,n.jsx)(t.h3,{id:"pluggable-raft-log",children:"Pluggable raft log"}),"\n",(0,n.jsx)(t.p,{children:"Raft log is also pluggable, users can provide their own log implementation. The default implementation stores log in local files."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},5404:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>o});var i=a(6672);const n={},s=i.createContext(n);function l(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);