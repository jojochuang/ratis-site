"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[7580],{8280:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Overview","href":"/ratis-site/docs/overview","docId":"overview","unlisted":false},{"type":"link","label":"About Apache Ratis","href":"/ratis-site/docs/about","docId":"about","unlisted":false},{"type":"link","label":"Getting Started (Detailed)","href":"/ratis-site/docs/getting-started-detailed","docId":"getting-started-detailed","unlisted":false},{"type":"category","label":"Concepts","items":[{"type":"link","label":"Concepts","href":"/ratis-site/docs/concepts","docId":"concepts","unlisted":false},{"type":"link","label":"Snapshot Guide","href":"/ratis-site/docs/snapshot","docId":"snapshot","unlisted":false},{"type":"link","label":"Membership Change","href":"/ratis-site/docs/membership-change","docId":"membership-change","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Features","items":[{"type":"link","label":"Ratis-shell CLI","href":"/ratis-site/docs/cli","docId":"cli","unlisted":false},{"type":"link","label":"Read-After-Write Consistency Support","href":"/ratis-site/docs/features/read-after-write","docId":"features/read-after-write","unlisted":false},{"type":"link","label":"Leader Lease","href":"/ratis-site/docs/features/leader-lease","docId":"features/leader-lease","unlisted":false},{"type":"link","label":"Non-Voting Members (Listeners)","href":"/ratis-site/docs/features/listeners","docId":"features/listeners","unlisted":false},{"type":"link","label":"Unordered Async Read Support","href":"/ratis-site/docs/features/unordered-async-read","docId":"features/unordered-async-read","unlisted":false},{"type":"link","label":"Linearizable Read from Followers","href":"/ratis-site/docs/features/linearizable-read","docId":"features/linearizable-read","unlisted":false},{"type":"link","label":"Rolling Upgrade and Rollback","href":"/ratis-site/docs/features/rolling-upgrade-rollback","docId":"features/rolling-upgrade-rollback","unlisted":false},{"type":"link","label":"Ratis Streaming","href":"/ratis-site/docs/features/ratis-streaming","docId":"features/ratis-streaming","unlisted":false},{"type":"link","label":"Support Priority in Leader Election","href":"/ratis-site/docs/features/leader-election-priority","docId":"features/leader-election-priority","unlisted":false},{"type":"link","label":"Pre-vote","href":"/ratis-site/docs/features/pre-vote","docId":"features/pre-vote","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Security","href":"/ratis-site/docs/security","docId":"security","unlisted":false},{"type":"category","label":"References","items":[{"type":"link","label":"Configuration Reference","href":"/ratis-site/docs/configurations","docId":"configurations","unlisted":false},{"type":"link","label":"Metrics","href":"/ratis-site/docs/metrics","docId":"metrics","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Contributors","items":[{"type":"link","label":"Building","href":"/ratis-site/docs/contributors/building","docId":"contributors/building","unlisted":false},{"type":"link","label":"Deploying Releases/Snapshots","href":"/ratis-site/docs/contributors/deploying","docId":"contributors/deploying","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"about":{"id":"about","title":"About Apache Ratis","description":"Apache Ratis is a highly customizable Raft protocol implementation in Java. Raft is an easily understandable consensus algorithm to manage replicated state. The Ratis project was started at 2016, entered Apache incubation in 2017, and graduated as a top level Apache project on Feb 17, 2021. Originally, Ratis was built for using Raft in Apache Ozone in order to replicate raw data and to provide high availability. The correctness and the performance of Ratis have been heavily tested with Ozone.","sidebar":"tutorialSidebar"},"cli":{"id":"cli","title":"Ratis-shell CLI","description":"Ratis-shell is the command line interface of Ratis.","sidebar":"tutorialSidebar"},"concepts":{"id":"concepts","title":"Concepts","description":"RaftServer","sidebar":"tutorialSidebar"},"configurations":{"id":"configurations","title":"Configuration Reference","description":"Server Configurations","sidebar":"tutorialSidebar"},"contributors/building":{"id":"contributors/building","title":"Building","description":"Apache Ratis uses Apache Maven 3.3.9 or later to build the artifacts. You can use the bundled Maven Wrapper to build without a pre-installed Maven, by replacing mvn with the mvnw (*nix) or mvnw.cmd (Windows) script in the root path.","sidebar":"tutorialSidebar"},"contributors/deploying":{"id":"contributors/deploying","title":"Deploying Releases/Snapshots","description":"This document describes how to deploy releases and snapshots specifically for Apache Ratis. For general information about Publishing Maven Artifacts at Apache, see http://www.apache.org/dev/publishing-maven-artifacts.html","sidebar":"tutorialSidebar"},"features":{"id":"features","title":"Features","description":"This section provides an overview of the key features supported by Apache Ratis."},"features/leader-election-priority":{"id":"features/leader-election-priority","title":"Support Priority in Leader Election","description":"Content for Support Priority in Leader Election.","sidebar":"tutorialSidebar"},"features/leader-lease":{"id":"features/leader-lease","title":"Leader Lease","description":"Objective","sidebar":"tutorialSidebar"},"features/linearizable-read":{"id":"features/linearizable-read","title":"Linearizable Read from Followers","description":"The Raft algorithm allows read-only requests to bypass the Raft log while still maintaining linearizability. This can significantly benefit the read throughput of the entire system. This document outlines the concept of ReadIndex and its implementation in Apache Ratis.","sidebar":"tutorialSidebar"},"features/listeners":{"id":"features/listeners","title":"Non-Voting Members (Listeners)","description":"Why are learners useful?","sidebar":"tutorialSidebar"},"features/pre-vote":{"id":"features/pre-vote","title":"Pre-vote","description":"Purpose","sidebar":"tutorialSidebar"},"features/ratis-streaming":{"id":"features/ratis-streaming","title":"Ratis Streaming","description":"Ratis Streaming is a feature designed to optimize the handling of client requests in a Raft cluster, addressing limitations of the traditional star topology where all client requests are sent directly to the Leader.","sidebar":"tutorialSidebar"},"features/read-after-write":{"id":"features/read-after-write","title":"Read-After-Write Consistency Support","description":"This feature ensures that a read operation by a client reflects the latest successful write by the same client, even if that write has not yet been fully committed across the entire Raft group. This provides a stronger consistency guarantee for individual client sessions.","sidebar":"tutorialSidebar"},"features/rolling-upgrade-rollback":{"id":"features/rolling-upgrade-rollback","title":"Rolling Upgrade and Rollback","description":"Apache Ratis, as a Java library implementing the Raft consensus protocol, provides the foundational elements for building distributed systems that support rolling upgrades and rollbacks. While Ratis itself doesn\'t dictate a specific upgrade procedure, its core principles of replicated logs and strong consistency enable applications built on it to achieve these operational capabilities.","sidebar":"tutorialSidebar"},"features/unordered-async-read":{"id":"features/unordered-async-read","title":"Unordered Async Read Support","description":"This feature addresses the limitation in Ratis where asynchronous read calls were strictly ordered. Previously, if a long-running asynchronous read (like a \\"watch a key\\" request) was initiated, subsequent asynchronous calls from the same client would be blocked until the watch request completed. This new feature introduces support for unordered asynchronous reads, allowing other asynchronous operations to proceed without waiting for a pending read.","sidebar":"tutorialSidebar"},"getting-started-detailed":{"id":"getting-started-detailed","title":"Getting Started (Detailed)","description":"Let\'s get started to use Raft in your application. To demonstrate how to use Ratis, we implement a simple Counter service, which maintains a counter value across a raft group. Clients could send the following types of requests to the raft group:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to Apache Ratis! This documentation provides an overview of the Raft consensus protocol implementation in Java."},"membership-change":{"id":"membership-change","title":"Membership Change","description":"Overview","sidebar":"tutorialSidebar"},"metrics":{"id":"metrics","title":"Metrics","description":"Ratis Server","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Overview","description":"Ratis is a Raft protocol library in Java. It\u2019s not a standalone server application like Zookeeper or Consul.","sidebar":"tutorialSidebar"},"security":{"id":"security","title":"Security","description":"Raft is a consensus algorithm designed for fault tolerance. A basic assumption of Raft is that - the servers can trust each other. In contrast, Raft is not designed to solve the Byzantine Generals Problem, which assumes that some of the servers may be malicious. Apache Ratis is a Raft library which supports a pluggable transport. Applications using Ratis usually run a transport over a network. In such case, the applications must either provide secure communications between the servers or provide a safe network environment such as running the servers in a private network. Applications must not accept requests from any untrusted servers. Below are the TLS Configuration Parameters. Applications may use them to build RaftServer/RaftClient objects for establishing secure connections.","sidebar":"tutorialSidebar"},"snapshot":{"id":"snapshot","title":"Snapshot Guide","description":"Overview","sidebar":"tutorialSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."}}}}')}}]);