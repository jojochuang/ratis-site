"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[6907],{6415:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"features/leader-lease","title":"Leader Lease","description":"Objective","source":"@site/docs/features/leader-lease.md","sourceDirName":"features","slug":"/features/leader-lease","permalink":"/ratis-site/docs/features/leader-lease","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/ratis-site/edit/main/docs/features/leader-lease.md","tags":[],"version":"current","frontMatter":{"title":"Leader Lease"},"sidebar":"tutorialSidebar","previous":{"title":"Read-After-Write Consistency Support","permalink":"/ratis-site/docs/features/read-after-write"},"next":{"title":"Non-Voting Members (Listeners)","permalink":"/ratis-site/docs/features/listeners"}}');var a=t(4848),n=t(8453);const i={title:"Leader Lease"},d="Leader Lease",l={},o=[{value:"Objective",id:"objective",level:2},{value:"Current Implementation Limitations",id:"current-implementation-limitations",level:2},{value:"Reasons for Proposed Feature (Leader Lease Read)",id:"reasons-for-proposed-feature-leader-lease-read",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Related Issues and References",id:"related-issues-and-references",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"leader-lease",children:"Leader Lease"})}),"\n",(0,a.jsx)(r.h2,{id:"objective",children:"Objective"}),"\n",(0,a.jsx)(r.p,{children:"To introduce the Leader Lease Read feature into Ratis to enhance read capabilities and address existing limitations."}),"\n",(0,a.jsx)(r.h2,{id:"current-implementation-limitations",children:"Current Implementation Limitations"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Leader Bypass Read:"})," Offers improved latency and throughput but is constrained to the leader and may produce inconsistent results."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Server Linearizable Read (ReadIndex):"})," Allows clients to read from any server, ensuring linearizability but suffers from suboptimal latency (20-30% throughput drop compared to bypass read)."]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"reasons-for-proposed-feature-leader-lease-read",children:"Reasons for Proposed Feature (Leader Lease Read)"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Validated by other communities (e.g., Sofa-Jraft), resulting in a 15% improvement in throughput performance."}),"\n",(0,a.jsx)(r.li,{children:"Addresses the demand for low-latency read capabilities from downstream dependents like IoTDB for time-series queries."}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(r.p,{children:["To enable and configure Leader Lease, the following properties can be set in ",(0,a.jsx)(r.code,{children:"RaftServerConfigKeys"}),":"]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Property"}),(0,a.jsx)(r.th,{children:"Description"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Default"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.code,{children:"raft.server.read.leader.lease.enabled"})}),(0,a.jsx)(r.td,{children:"Whether to enable lease in linearizable read-only requests."}),(0,a.jsx)(r.td,{children:(0,a.jsx)(r.code,{children:"boolean"})}),(0,a.jsx)(r.td,{children:(0,a.jsx)(r.code,{children:"false"})})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.code,{children:"raft.server.read.leader.lease.timeout.ratio"})}),(0,a.jsx)(r.td,{children:"Maximum timeout ratio of leader lease."}),(0,a.jsxs)(r.td,{children:[(0,a.jsx)(r.code,{children:"double"})," (ranging from 0.0 to 1.0)"]}),(0,a.jsx)(r.td,{children:(0,a.jsx)(r.code,{children:"0.9"})})]})]})]}),"\n",(0,a.jsx)(r.h2,{id:"related-issues-and-references",children:"Related Issues and References"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Previous community discussions: ",(0,a.jsx)(r.a,{href:"https://issues.apache.org/jira/browse/RATIS-1864",children:"RATIS-1864"}),", ",(0,a.jsx)(r.a,{href:"https://issues.apache.org/jira/browse/RATIS-1273",children:"RATIS-1273"})," and ",(0,a.jsx)(r.a,{href:"https://github.com/apache/ratis/pull/383",children:"https://github.com/apache/ratis/pull/383"})]}),"\n",(0,a.jsxs)(r.li,{children:["Quantitative results: ",(0,a.jsx)(r.a,{href:"https://www.sofastack.tech/en/projects/sofa-jraft/jraft-user-guide/",children:"https://www.sofastack.tech/en/projects/sofa-jraft/jraft-user-guide/"})," (Section 5. Linearizable read)"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>d});var s=t(6540);const a={},n=s.createContext(a);function i(e){const r=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(n.Provider,{value:r},e.children)}}}]);