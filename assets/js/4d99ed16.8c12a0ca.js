"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[699],{4060:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"features/leader-election-priority","title":"Support Priority in Leader Election","description":"Ratis supports assigning priorities to Raft peers, influencing the leader election process to favor higher-priority servers. This mechanism allows administrators to guide the cluster towards a preferred leader, which can be beneficial for performance, resource utilization, or operational reasons (e.g., preferring a server in a specific rack or with more powerful hardware).","source":"@site/docs/features/leader-election-priority.md","sourceDirName":"features","slug":"/features/leader-election-priority","permalink":"/ratis-site/docs/features/leader-election-priority","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/ratis-site/edit/main/docs/features/leader-election-priority.md","tags":[],"version":"current","frontMatter":{"title":"Support Priority in Leader Election"},"sidebar":"tutorialSidebar","previous":{"title":"Ratis Streaming","permalink":"/ratis-site/docs/features/ratis-streaming"},"next":{"title":"Pre-vote","permalink":"/ratis-site/docs/features/pre-vote"}}');var s=i(3420),n=i(5404);const o={title:"Support Priority in Leader Election"},a="Support Priority in Leader Election",l={},c=[{value:"How Priority Affects Leader Election",id:"how-priority-affects-leader-election",level:2},{value:"Benefits",id:"benefits",level:2},{value:"References",id:"references",level:2}];function d(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"support-priority-in-leader-election",children:"Support Priority in Leader Election"})}),"\n",(0,s.jsx)(r.p,{children:"Ratis supports assigning priorities to Raft peers, influencing the leader election process to favor higher-priority servers. This mechanism allows administrators to guide the cluster towards a preferred leader, which can be beneficial for performance, resource utilization, or operational reasons (e.g., preferring a server in a specific rack or with more powerful hardware)."}),"\n",(0,s.jsx)(r.h2,{id:"how-priority-affects-leader-election",children:"How Priority Affects Leader Election"}),"\n",(0,s.jsx)(r.p,{children:"When a server becomes a candidate and initiates a leader election, the priority assigned to each peer plays a crucial role:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Priority Assignment:"})," Each ",(0,s.jsx)(r.code,{children:"RaftPeer"})," can be assigned an integer priority. This is typically done during the cluster configuration or dynamically using the Ratis CLI."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Configuration:"})," You can set the priority when building ",(0,s.jsx)(r.code,{children:"RaftPeer"})," objects:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'import org.apache.ratis.protocol.RaftPeer;\n\nRaftPeer peerWithPriority = RaftPeer.newBuilder()\n    .setId("peer1")\n    .setAddress("localhost:5000")\n    .setPriority(100) // Set a higher priority\n    .build();\n'})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Ratis CLI:"})," Use the ",(0,s.jsx)(r.code,{children:"ratis-cli peer setPriority"})," command to dynamically adjust peer priorities:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"$ ratis-cli sh peer setPriority -peers <PEER_ID:PEER_ADDRESS,...> -addressPriority <PEER_HOST:PEER_PORT|PRIORITY,...>\n# Example: Set priority 100 for peer at localhost:5000\n$ ratis-cli sh peer setPriority -peers peer1:localhost:5000,peer2:localhost:5001 -addressPriority localhost:5000|100\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Higher Priority Veto Power:"})," If a candidate (say, Peer A) requests a vote from another peer (Peer B) that has a ",(0,s.jsx)(r.em,{children:"higher priority"})," than Peer A, and Peer B ",(0,s.jsx)(r.em,{children:"rejects"})," Peer A's vote, then Peer A will immediately step down and abort its election attempt. This mechanism ensures that a lower-priority candidate does not win an election if a more suitable, higher-priority candidate is available and active."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Requirement for Higher Priority Acceptance:"})," For a candidate to successfully win an election, it must not only secure a majority of votes from the voting members but also ensure that all higher-priority peers have either voted for it or have not rejected its vote. If there are higher-priority peers that have not yet responded, the candidate will wait for their responses (up to the election timeout). This ensures that the cluster converges on the highest-priority available leader."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"benefits",children:"Benefits"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Preferred Leader Selection:"})," Allows you to designate specific servers as preferred leaders, which can be beneficial for performance optimization (e.g., choosing a server with better hardware or network connectivity)."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Operational Control:"})," Provides a mechanism to influence leadership during maintenance or recovery scenarios."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Predictable Behavior:"})," Helps in making the leader election process more predictable in heterogeneous environments."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://issues.apache.org/jira/browse/RATIS-967",children:"RATIS-967: SUPPORT PRIORITY IN LEADER ELECTION"})}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://issues.apache.org/jira/browse/RATIS-1247",children:"RATIS-1247: SUPPORT ROLLING UPGRADE AND ROLLBACK"})," (This Jira introduced the priority concept as part of leadership transfer)."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5404:(e,r,i)=>{i.d(r,{R:()=>o,x:()=>a});var t=i(6672);const s={},n=t.createContext(s);function o(e){const r=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);