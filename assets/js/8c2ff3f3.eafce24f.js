"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[7192],{2365:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"concepts/statemachine-storage","title":"StateMachine Storage","description":"The StateMachineStorage interface defines how a Ratis state machine interacts with its persistent storage for snapshots. While the Raft log ensures the durability of operations, snapshots provide a compact representation of the state machine\'s state at a given point in time, enabling efficient recovery and log compaction.","source":"@site/docs/concepts/statemachine-storage.md","sourceDirName":"concepts","slug":"/concepts/statemachine-storage","permalink":"/ratis-site/docs/concepts/statemachine-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/ratis-site/edit/main/docs/concepts/statemachine-storage.md","tags":[],"version":"current","frontMatter":{"title":"StateMachine Storage"},"sidebar":"tutorialSidebar","previous":{"title":"State Machine Snapshot","permalink":"/ratis-site/docs/concepts/state-machine-snapshot"},"next":{"title":"Log Appender","permalink":"/ratis-site/docs/concepts/log-appender"}}');var i=s(3420),a=s(5404);const o={title:"StateMachine Storage"},r="StateMachine Storage",c={},h=[{value:"Key Responsibilities of <code>StateMachineStorage</code>",id:"key-responsibilities-of-statemachinestorage",level:2},{value:"SimpleStateMachineStorage: The Default Implementation",id:"simplestatemachinestorage-the-default-implementation",level:2},{value:"Key Characteristics of <code>SimpleStateMachineStorage</code>:",id:"key-characteristics-of-simplestatemachinestorage",level:3},{value:"When to Use <code>SimpleStateMachineStorage</code>:",id:"when-to-use-simplestatemachinestorage",level:3},{value:"When to Implement Your Own <code>StateMachineStorage</code>:",id:"when-to-implement-your-own-statemachinestorage",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"statemachine-storage",children:"StateMachine Storage"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"StateMachineStorage"})," interface defines how a Ratis state machine interacts with its persistent storage for snapshots. While the Raft log ensures the durability of operations, snapshots provide a compact representation of the state machine's state at a given point in time, enabling efficient recovery and log compaction."]}),"\n",(0,i.jsxs)(t.h2,{id:"key-responsibilities-of-statemachinestorage",children:["Key Responsibilities of ",(0,i.jsx)(t.code,{children:"StateMachineStorage"})]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:["Initialization (",(0,i.jsx)(t.code,{children:"init"}),"):"]})," Initializes the storage with the ",(0,i.jsx)(t.code,{children:"RaftStorage"})," object, which provides the base directory for the state machine's data."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Snapshot Management:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"getLatestSnapshot()"}),": Returns information about the most recent durable snapshot."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"cleanupOldSnapshots()"}),": Cleans up old snapshots based on a retention policy."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:["Formatting (",(0,i.jsx)(t.code,{children:"format"}),"):"]})," Formats the state machine's storage."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Directory Management (Optional):"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"getSnapshotDir()"}),": Returns the directory where snapshots are stored."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"getTmpDir()"}),": Returns a temporary directory for in-progress snapshot operations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"simplestatemachinestorage-the-default-implementation",children:"SimpleStateMachineStorage: The Default Implementation"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"SimpleStateMachineStorage"})," is the only built-in implementation of ",(0,i.jsx)(t.code,{children:"StateMachineStorage"})," in Ratis. It provides a straightforward way to manage snapshots by storing each snapshot as a single file within the state machine's dedicated storage directory."]}),"\n",(0,i.jsxs)(t.h3,{id:"key-characteristics-of-simplestatemachinestorage",children:["Key Characteristics of ",(0,i.jsx)(t.code,{children:"SimpleStateMachineStorage"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Single-File Snapshots:"})," Each snapshot is stored as a single file named ",(0,i.jsx)(t.code,{children:"snapshot.term_index"}),", where ",(0,i.jsx)(t.code,{children:"term"})," and ",(0,i.jsx)(t.code,{children:"index"})," correspond to the last log entry included in the snapshot."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"MD5 Checksums:"})," It supports MD5 checksums for snapshot files to ensure data integrity."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Snapshot Discovery:"})," It can discover the latest snapshot by scanning the storage directory and parsing the filenames."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Cleanup:"})," It implements the ",(0,i.jsx)(t.code,{children:"cleanupOldSnapshots"})," method to remove older snapshots based on a configurable retention policy."]}),"\n"]}),"\n",(0,i.jsxs)(t.h3,{id:"when-to-use-simplestatemachinestorage",children:["When to Use ",(0,i.jsx)(t.code,{children:"SimpleStateMachineStorage"}),":"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"SimpleStateMachineStorage"})," is suitable for most common use cases where the state machine's snapshot can be represented as a single, self-contained file. It's simple to use and provides the necessary durability guarantees."]}),"\n",(0,i.jsxs)(t.h3,{id:"when-to-implement-your-own-statemachinestorage",children:["When to Implement Your Own ",(0,i.jsx)(t.code,{children:"StateMachineStorage"}),":"]}),"\n",(0,i.jsxs)(t.p,{children:["You might consider implementing your own ",(0,i.jsx)(t.code,{children:"StateMachineStorage"})," if:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Complex Snapshot Layout:"})," Your state machine's snapshot consists of multiple files or a complex directory structure that cannot be easily managed as a single file."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"External Storage:"})," You want to store snapshots in an external storage system (e.g., cloud storage, distributed file system) rather than the local disk."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Custom Snapshotting Logic:"})," You have specific requirements for snapshot creation, management, or recovery that are not met by ",(0,i.jsx)(t.code,{children:"SimpleStateMachineStorage"}),"."]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},5404:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>r});var n=s(6672);const i={},a=n.createContext(i);function o(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);