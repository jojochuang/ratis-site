"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[7580],{8280:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Overview","href":"/ratis-site/docs/overview","docId":"overview","unlisted":false},{"type":"link","label":"About Apache Ratis","href":"/ratis-site/docs/about","docId":"about","unlisted":false},{"type":"link","label":"Getting Started (Detailed)","href":"/ratis-site/docs/getting-started-detailed","docId":"getting-started-detailed","unlisted":false},{"type":"category","label":"Concepts","items":[{"type":"link","label":"Concepts","href":"/ratis-site/docs/concepts","docId":"concepts","unlisted":false},{"type":"link","label":"Raft Log","href":"/ratis-site/docs/concepts/raft-log","docId":"concepts/raft-log","unlisted":false},{"type":"link","label":"State Machine Snapshot","href":"/ratis-site/docs/concepts/state-machine-snapshot","docId":"concepts/state-machine-snapshot","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Features","items":[{"type":"link","label":"Ratis-shell CLI","href":"/ratis-site/docs/cli","docId":"cli","unlisted":false},{"type":"link","label":"Read-After-Write Consistency Support","href":"/ratis-site/docs/features/read-after-write","docId":"features/read-after-write","unlisted":false},{"type":"link","label":"Leader Lease","href":"/ratis-site/docs/features/leader-lease","docId":"features/leader-lease","unlisted":false},{"type":"link","label":"Non-Voting Members (Listeners)","href":"/ratis-site/docs/features/listeners","docId":"features/listeners","unlisted":false},{"type":"link","label":"Unordered Async Read Support","href":"/ratis-site/docs/features/unordered-async-read","docId":"features/unordered-async-read","unlisted":false},{"type":"link","label":"Linearizable Read from Followers","href":"/ratis-site/docs/features/linearizable-read","docId":"features/linearizable-read","unlisted":false},{"type":"link","label":"Rolling Upgrade and Rollback","href":"/ratis-site/docs/features/rolling-upgrade-rollback","docId":"features/rolling-upgrade-rollback","unlisted":false},{"type":"link","label":"Ratis Streaming","href":"/ratis-site/docs/features/ratis-streaming","docId":"features/ratis-streaming","unlisted":false},{"type":"link","label":"Support Priority in Leader Election","href":"/ratis-site/docs/features/leader-election-priority","docId":"features/leader-election-priority","unlisted":false},{"type":"link","label":"Pre-vote","href":"/ratis-site/docs/features/pre-vote","docId":"features/pre-vote","unlisted":false},{"type":"link","label":"Observability","href":"/ratis-site/docs/features/observability","docId":"features/observability","unlisted":false},{"type":"link","label":"Ratis Tools","href":"/ratis-site/docs/tools","docId":"tools","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Developer Guide","items":[{"type":"link","label":"Streaming Configuration","href":"/ratis-site/docs/developer-guide/streaming-configuration","docId":"developer-guide/streaming-configuration","unlisted":false},{"type":"link","label":"Advanced StateMachine APIs","href":"/ratis-site/docs/developer-guide/statemachine-developer-guide","docId":"developer-guide/statemachine-developer-guide","unlisted":false},{"type":"link","label":"StateMachine Core API by Example","href":"/ratis-site/docs/developer-guide/statemachine-core-api","docId":"developer-guide/statemachine-core-api","unlisted":false},{"type":"link","label":"Listeners (Non-Voting Members)","href":"/ratis-site/docs/developer-guide/listeners","docId":"developer-guide/listeners","unlisted":false},{"type":"link","label":"Linearizable Read from Followers","href":"/ratis-site/docs/developer-guide/linearizable-read","docId":"developer-guide/linearizable-read","unlisted":false},{"type":"link","label":"Security Developer Guide","href":"/ratis-site/docs/developer-guide/security","docId":"developer-guide/security","unlisted":false},{"type":"link","label":"Watch Requests","href":"/ratis-site/docs/developer-guide/watch-requests","docId":"developer-guide/watch-requests","unlisted":false},{"type":"link","label":"Group Management","href":"/ratis-site/docs/developer-guide/group-management","docId":"developer-guide/group-management","unlisted":false},{"type":"link","label":"Snapshot Management API","href":"/ratis-site/docs/developer-guide/snapshot-management-api","docId":"developer-guide/snapshot-management-api","unlisted":false},{"type":"link","label":"Membership Change","href":"/ratis-site/docs/developer-guide/membership-change","docId":"developer-guide/membership-change","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"References","items":[{"type":"link","label":"Client Configurations","href":"/ratis-site/docs/configurations/client","docId":"configurations/client","unlisted":false},{"type":"link","label":"gRPC Configurations","href":"/ratis-site/docs/configurations/grpc","docId":"configurations/grpc","unlisted":false},{"type":"link","label":"Netty Configurations","href":"/ratis-site/docs/configurations/netty","docId":"configurations/netty","unlisted":false},{"type":"link","label":"Raft Configurations","href":"/ratis-site/docs/configurations/raft","docId":"configurations/raft","unlisted":false},{"type":"link","label":"Server Configurations","href":"/ratis-site/docs/configurations/server","docId":"configurations/server","unlisted":false},{"type":"link","label":"Metrics","href":"/ratis-site/docs/metrics","docId":"metrics","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Contributors","items":[{"type":"link","label":"Building","href":"/ratis-site/docs/contributors/building","docId":"contributors/building","unlisted":false},{"type":"link","label":"Deploying Releases/Snapshots","href":"/ratis-site/docs/contributors/deploying","docId":"contributors/deploying","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"about":{"id":"about","title":"About Apache Ratis","description":"Apache Ratis is a highly customizable Raft protocol implementation in Java. Raft is an easily understandable consensus algorithm to manage replicated state. The Ratis project was started at 2016, entered Apache incubation in 2017, and graduated as a top level Apache project on Feb 17, 2021. Originally, Ratis was built for using Raft in Apache Ozone in order to replicate raw data and to provide high availability. The correctness and the performance of Ratis have been heavily tested with Ozone.","sidebar":"tutorialSidebar"},"cli":{"id":"cli","title":"Ratis-shell CLI","description":"Ratis-shell is the command line interface of Ratis.","sidebar":"tutorialSidebar"},"concepts":{"id":"concepts","title":"Concepts","description":"RaftServer","sidebar":"tutorialSidebar"},"concepts/raft-log":{"id":"concepts/raft-log","title":"Raft Log","description":"The Raft Log is the central data structure in Ratis that ensures consistency and fault tolerance. It is an append-only log of operations that are applied to the state machine. The log is replicated across all the servers in a Raft group, and an entry is only considered \\"committed\\" when it has been successfully replicated to a majority of the servers.","sidebar":"tutorialSidebar"},"concepts/state-machine-snapshot":{"id":"concepts/state-machine-snapshot","title":"State Machine Snapshot","description":"Overview","sidebar":"tutorialSidebar"},"configurations":{"id":"configurations","title":"Configuration Reference","description":"This section contains the documentation for Ratis server and client configurations."},"configurations/client":{"id":"configurations/client","title":"Client Configurations","description":"Client configurations are located at RaftClientConfigKeys.","sidebar":"tutorialSidebar"},"configurations/grpc":{"id":"configurations/grpc","title":"gRPC Configurations","description":"Admin","sidebar":"tutorialSidebar"},"configurations/netty":{"id":"configurations/netty","title":"Netty Configurations","description":"Server","sidebar":"tutorialSidebar"},"configurations/raft":{"id":"configurations/raft","title":"Raft Configurations","description":"RPC","sidebar":"tutorialSidebar"},"configurations/server":{"id":"configurations/server","title":"Server Configurations","description":"Most of the server configurations can be found at RaftServerConfigKeys. To customize configurations, we may 1. create a RaftProperties object, 2. set the desired values, and then 3. pass the customized RaftProperties object when building a RaftServer. For example,","sidebar":"tutorialSidebar"},"contributors/building":{"id":"contributors/building","title":"Building","description":"Apache Ratis uses Apache Maven 3.3.9 or later to build the artifacts. You can use the bundled Maven Wrapper to build without a pre-installed Maven, by replacing mvn with the mvnw (*nix) or mvnw.cmd (Windows) script in the root path.","sidebar":"tutorialSidebar"},"contributors/deploying":{"id":"contributors/deploying","title":"Deploying Releases/Snapshots","description":"This document describes how to deploy releases and snapshots specifically for Apache Ratis. For general information about Publishing Maven Artifacts at Apache, see http://www.apache.org/dev/publishing-maven-artifacts.html","sidebar":"tutorialSidebar"},"developer-guide/group-management":{"id":"developer-guide/group-management","title":"Group Management","description":"The GroupManagementApi provides a powerful interface for dynamically managing Raft groups on a Ratis server. This guide explains how to use this API to add, remove, and inspect Raft groups.","sidebar":"tutorialSidebar"},"developer-guide/linearizable-read":{"id":"developer-guide/linearizable-read","title":"Linearizable Read from Followers","description":"Ratis supports linearizable reads, which allows clients to read the most up-to-date committed data from any server in the cluster, including followers. This can significantly improve read throughput and reduce the load on the leader.","sidebar":"tutorialSidebar"},"developer-guide/listeners":{"id":"developer-guide/listeners","title":"Listeners (Non-Voting Members)","description":"Terminology Note: In Ratis, the term listener is used to describe what is more broadly known as a learner in the Raft protocol literature. Their functionality and purpose are identical.","sidebar":"tutorialSidebar"},"developer-guide/membership-change":{"id":"developer-guide/membership-change","title":"Membership Change","description":"Overview","sidebar":"tutorialSidebar"},"developer-guide/security":{"id":"developer-guide/security","title":"Security Developer Guide","description":"This guide provides a comprehensive overview of the security features in Ratis and how to configure them. By default, Ratis does not provide a secure environment. It is up to the application to either run Ratis in a trusted, private network or to enable the security features described below.","sidebar":"tutorialSidebar"},"developer-guide/snapshot-management-api":{"id":"developer-guide/snapshot-management-api","title":"Snapshot Management API","description":"The SnapshotManagementApi provides a simple way to manually trigger the creation of snapshots on a Ratis server. This can be useful for administrative tasks, such as backing up the state machine or preparing for a cluster upgrade.","sidebar":"tutorialSidebar"},"developer-guide/statemachine-core-api":{"id":"developer-guide/statemachine-core-api","title":"StateMachine Core API by Example","description":"This guide provides a practical, example-driven walkthrough of the core StateMachine API. We will build a simple, in-memory key-value store to demonstrate how to implement the essential lifecycle and transaction methods.","sidebar":"tutorialSidebar"},"developer-guide/statemachine-developer-guide":{"id":"developer-guide/statemachine-developer-guide","title":"Advanced StateMachine APIs","description":"This guide explores the advanced, optional APIs of the StateMachine interface. Implementing these APIs gives you fine-grained control over data handling, event notifications, and multi-raft management. For a guide to the essential, core methods, see the \\"StateMachine Core API\\" guide.","sidebar":"tutorialSidebar"},"developer-guide/streaming-configuration":{"id":"developer-guide/streaming-configuration","title":"Streaming Configuration","description":"This tutorial explains how to configure the Ratis streaming feature.","sidebar":"tutorialSidebar"},"developer-guide/watch-requests":{"id":"developer-guide/watch-requests","title":"Watch Requests","description":"The AsyncApi.watch() method is a powerful feature for clients that need to wait for a specific log index to be replicated to a certain level. This is particularly useful in scenarios where a client has submitted a write request and wants to be notified when that write has been safely replicated to a quorum of servers. Instead of polling, the client can use watch() to receive a future that will be completed when the desired replication level is reached.","sidebar":"tutorialSidebar"},"features":{"id":"features","title":"Features","description":"This section provides an overview of the key features supported by Apache Ratis."},"features/leader-election-priority":{"id":"features/leader-election-priority","title":"Support Priority in Leader Election","description":"Content for Support Priority in Leader Election.","sidebar":"tutorialSidebar"},"features/leader-lease":{"id":"features/leader-lease","title":"Leader Lease","description":"Objective","sidebar":"tutorialSidebar"},"features/linearizable-read":{"id":"features/linearizable-read","title":"Linearizable Read from Followers","description":"The Raft algorithm allows read-only requests to bypass the Raft log while still maintaining linearizability. This can significantly benefit the read throughput of the entire system. This document outlines the concept of ReadIndex and its implementation in Apache Ratis.","sidebar":"tutorialSidebar"},"features/listeners":{"id":"features/listeners","title":"Non-Voting Members (Listeners)","description":"Why are learners useful?","sidebar":"tutorialSidebar"},"features/observability":{"id":"features/observability","title":"Observability","description":"Ratis provides a comprehensive metrics system to monitor the health and performance of your cluster. This tutorial explains how to expose and consume these metrics.","sidebar":"tutorialSidebar"},"features/pre-vote":{"id":"features/pre-vote","title":"Pre-vote","description":"Purpose","sidebar":"tutorialSidebar"},"features/ratis-streaming":{"id":"features/ratis-streaming","title":"Ratis Streaming","description":"For information on how to configure Ratis Streaming, please see the Streaming Configuration tutorial.","sidebar":"tutorialSidebar"},"features/read-after-write":{"id":"features/read-after-write","title":"Read-After-Write Consistency Support","description":"This feature ensures that a read operation by a client reflects the latest successful write by the same client, even if that write has not yet been fully committed across the entire Raft group. This provides a stronger consistency guarantee for individual client sessions.","sidebar":"tutorialSidebar"},"features/rolling-upgrade-rollback":{"id":"features/rolling-upgrade-rollback","title":"Rolling Upgrade and Rollback","description":"Apache Ratis, as a Java library implementing the Raft consensus protocol, provides the foundational elements for building distributed systems that support rolling upgrades and rollbacks. While Ratis itself doesn\'t dictate a specific upgrade procedure, its core principles of replicated logs and strong consistency enable applications built on it to achieve these operational capabilities.","sidebar":"tutorialSidebar"},"features/unordered-async-read":{"id":"features/unordered-async-read","title":"Unordered Async Read Support","description":"This feature addresses the limitation in Ratis where asynchronous read calls were strictly ordered. Previously, if a long-running asynchronous read (like a \\"watch a key\\" request) was initiated, subsequent asynchronous calls from the same client would be blocked until the watch request completed. This new feature introduces support for unordered asynchronous reads, allowing other asynchronous operations to proceed without waiting for a pending read.","sidebar":"tutorialSidebar"},"getting-started-detailed":{"id":"getting-started-detailed","title":"Getting Started (Detailed)","description":"Let\'s get started to use Raft in your application. To demonstrate how to use Ratis, we implement a simple Counter service, which maintains a counter value across a raft group. Clients could send the following types of requests to the raft group:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to Apache Ratis! This documentation provides an overview of the Raft consensus protocol implementation in Java."},"metrics":{"id":"metrics","title":"Metrics","description":"Ratis Server","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Overview","description":"Ratis is a Raft protocol library in Java. It\u2019s not a standalone server application like Zookeeper or Consul.","sidebar":"tutorialSidebar"},"tools":{"id":"tools","title":"Ratis Tools","description":"The ratis-tools module contains a collection of command-line tools for working with Ratis.","sidebar":"tutorialSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."}}}}')}}]);