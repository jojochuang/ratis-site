"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[288],{1975:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"features/no-leader-mode","title":"No-Leader Mode","description":"Ratis supports a \\"no-leader mode\\" (also known as \\"safe mode\\") where the cluster can operate temporarily without a leader. In this mode, all servers remain in the follower state. This is useful for planned maintenance, as it allows you to perform rolling restarts or other administrative tasks without triggering leader elections and potentially causing downtime.","source":"@site/docs/features/no-leader-mode.md","sourceDirName":"features","slug":"/features/no-leader-mode","permalink":"/ratis-site/docs/features/no-leader-mode","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/ratis-site/edit/main/docs/features/no-leader-mode.md","tags":[],"version":"current","frontMatter":{"title":"No-Leader Mode"},"sidebar":"tutorialSidebar","previous":{"title":"Ratis Tools","permalink":"/ratis-site/docs/tools"},"next":{"title":"Streaming Configuration","permalink":"/ratis-site/docs/developer-guide/streaming-configuration"}}');var a=r(3420),s=r(5404);const o={title:"No-Leader Mode"},i="No-Leader Mode Developer Guide",l={},d=[{value:"Entering No-Leader Mode",id:"entering-no-leader-mode",level:2},{value:"1. Gracefully Step Down the Leader (Optional)",id:"1-gracefully-step-down-the-leader-optional",level:3},{value:"2. Pause Leader Elections",id:"2-pause-leader-elections",level:3},{value:"Exiting No-Leader Mode",id:"exiting-no-leader-mode",level:2},{value:"Programmatic API",id:"programmatic-api",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"no-leader-mode-developer-guide",children:"No-Leader Mode Developer Guide"})}),"\n",(0,a.jsx)(n.p,{children:'Ratis supports a "no-leader mode" (also known as "safe mode") where the cluster can operate temporarily without a leader. In this mode, all servers remain in the follower state. This is useful for planned maintenance, as it allows you to perform rolling restarts or other administrative tasks without triggering leader elections and potentially causing downtime.'}),"\n",(0,a.jsx)(n.h2,{id:"entering-no-leader-mode",children:"Entering No-Leader Mode"}),"\n",(0,a.jsxs)(n.p,{children:["To enter no-leader mode, you must pause leader elections on all servers in the cluster. This can be done using the ",(0,a.jsx)(n.code,{children:"ratis-cli"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"1-gracefully-step-down-the-leader-optional",children:"1. Gracefully Step Down the Leader (Optional)"}),"\n",(0,a.jsx)(n.p,{children:"Before pausing elections, it is recommended to gracefully step down the current leader. This will ensure a smooth transition and prevent any in-flight requests from being lost."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ratis-cli election stepDown -peers <PEER0_HOST:PEER0_PORT,PEER1_HOST:PEER1_PORT,...>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-pause-leader-elections",children:"2. Pause Leader Elections"}),"\n",(0,a.jsx)(n.p,{children:"Once the leader has stepped down, you can pause leader elections on each server in the cluster."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ratis-cli election pause -peers <PEER0_HOST:PEER0_PORT,...> -address <PEER_HOST:PEER_PORT>\n"})}),"\n",(0,a.jsx)(n.p,{children:"You must run this command for each server in the cluster, specifying the address of the server to pause."}),"\n",(0,a.jsx)(n.h2,{id:"exiting-no-leader-mode",children:"Exiting No-Leader Mode"}),"\n",(0,a.jsx)(n.p,{children:"To exit no-leader mode, you must resume leader elections on all servers in the cluster."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ratis-cli election resume -peers <PEER0_HOST:PEER0_PORT,...> -address <PEER_HOST:PEER_PORT>\n"})}),"\n",(0,a.jsx)(n.p,{children:"As with pausing, you must run this command for each server in the cluster. Once elections are resumed, the servers will elect a new leader and the cluster will resume normal operation."}),"\n",(0,a.jsx)(n.h2,{id:"programmatic-api",children:"Programmatic API"}),"\n",(0,a.jsxs)(n.p,{children:["In addition to the ",(0,a.jsx)(n.code,{children:"ratis-cli"}),", you can also use the ",(0,a.jsx)(n.code,{children:"LeaderElectionManagementApi"})," to programmatically pause and resume leader elections."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"import org.apache.ratis.client.RaftClient;\nimport org.apache.ratis.client.api.LeaderElectionManagementApi;\nimport org.apache.ratis.protocol.RaftPeerId;\n\n// ...\n\nRaftClient client = ...; // Your RaftClient instance\nRaftPeerId serverId = ...; // The ID of the server to manage\n\nLeaderElectionManagementApi electionManager = client.getLeaderElectionManagementApi(serverId);\n\n// Pause leader elections\nelectionManager.pause();\n\n// Resume leader elections\nelectionManager.resume();\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},5404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(6672);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);