"use strict";(self.webpackChunkratis_tmp=self.webpackChunkratis_tmp||[]).push([[4021],{1388:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"developer-guide/snapshot-management-api","title":"Snapshot Management API","description":"The SnapshotManagementApi provides a simple way to manually trigger the creation of snapshots on a Ratis server. This can be useful for administrative tasks, such as backing up the state machine or preparing for a cluster upgrade.","source":"@site/docs/developer-guide/snapshot-management-api.md","sourceDirName":"developer-guide","slug":"/developer-guide/snapshot-management-api","permalink":"/ratis-site/docs/developer-guide/snapshot-management-api","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/ratis-site/edit/main/docs/developer-guide/snapshot-management-api.md","tags":[],"version":"current","frontMatter":{"title":"Snapshot Management API"},"sidebar":"tutorialSidebar","previous":{"title":"Group Management","permalink":"/ratis-site/docs/developer-guide/group-management"},"next":{"title":"Membership Change","permalink":"/ratis-site/docs/developer-guide/membership-change"}}');var s=t(4848),i=t(8453);const o={title:"Snapshot Management API"},r="Snapshot Management API Developer Guide",c={},p=[{value:"Getting the <code>SnapshotManagementApi</code>",id:"getting-the-snapshotmanagementapi",level:2},{value:"Creating a Snapshot",id:"creating-a-snapshot",level:2},{value:"Basic Snapshot Creation",id:"basic-snapshot-creation",level:3},{value:"Forcing a Snapshot",id:"forcing-a-snapshot",level:3},{value:"Controlling the Snapshot Creation Gap",id:"controlling-the-snapshot-creation-gap",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"snapshot-management-api-developer-guide",children:"Snapshot Management API Developer Guide"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"SnapshotManagementApi"})," provides a simple way to manually trigger the creation of snapshots on a Ratis server. This can be useful for administrative tasks, such as backing up the state machine or preparing for a cluster upgrade."]}),"\n",(0,s.jsxs)(n.h2,{id:"getting-the-snapshotmanagementapi",children:["Getting the ",(0,s.jsx)(n.code,{children:"SnapshotManagementApi"})]}),"\n",(0,s.jsxs)(n.p,{children:["To get an instance of the ",(0,s.jsx)(n.code,{children:"SnapshotManagementApi"}),", you need to have a ",(0,s.jsx)(n.code,{children:"RaftClient"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"import org.apache.ratis.client.RaftClient;\nimport org.apache.ratis.client.api.SnapshotManagementApi;\n\n// ...\n\nRaftClient client = ...; // Your RaftClient instance\n\nSnapshotManagementApi snapshotManager = client.getSnapshotManagementApi();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-snapshot",children:"Creating a Snapshot"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"SnapshotManagementApi"})," has a single ",(0,s.jsx)(n.code,{children:"create"})," method with a few overloads. The core functionality is to trigger the creation of a snapshot on the server."]}),"\n",(0,s.jsx)(n.h3,{id:"basic-snapshot-creation",children:"Basic Snapshot Creation"}),"\n",(0,s.jsxs)(n.p,{children:["To trigger a snapshot with the server's default settings, you can use the ",(0,s.jsx)(n.code,{children:"create(long timeoutMs)"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import org.apache.ratis.protocol.RaftClientReply;\n\n// ...\n\ntry {\n    RaftClientReply reply = snapshotManager.create(3000); // 3-second timeout\n    if (reply.isSuccess()) {\n        System.out.println("Successfully created snapshot with index: " + reply.getLogIndex());\n    }\n} catch (IOException e) {\n    // Handle exception\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"forcing-a-snapshot",children:"Forcing a Snapshot"}),"\n",(0,s.jsxs)(n.p,{children:["If you need to force the creation of a snapshot, you can use the ",(0,s.jsx)(n.code,{children:"create(boolean force, long timeoutMs)"})," method. Setting ",(0,s.jsx)(n.code,{children:"force"})," to ",(0,s.jsx)(n.code,{children:"true"})," will cause a snapshot to be created even if the number of new log entries is small."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'try {\n    RaftClientReply reply = snapshotManager.create(true, 3000); // Force snapshot creation\n    if (reply.isSuccess()) {\n        System.out.println("Successfully created snapshot with index: " + reply.getLogIndex());\n    }\n} catch (IOException e) {\n    // Handle exception\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"controlling-the-snapshot-creation-gap",children:"Controlling the Snapshot Creation Gap"}),"\n",(0,s.jsxs)(n.p,{children:["For more fine-grained control, you can use the ",(0,s.jsx)(n.code,{children:"create(long creationGap, long timeoutMs)"})," method. The ",(0,s.jsx)(n.code,{children:"creationGap"})," parameter specifies the minimum number of new log entries that must exist since the last snapshot for a new snapshot to be created. This can be useful for preventing excessive snapshotting."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'try {\n    // Only create a snapshot if there are at least 1000 new log entries\n    RaftClientReply reply = snapshotManager.create(1000, 3000);\n    if (reply.isSuccess()) {\n        System.out.println("Successfully created snapshot with index: " + reply.getLogIndex());\n    }\n} catch (IOException e) {\n    // Handle exception\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);